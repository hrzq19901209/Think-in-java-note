this关键字只能在方法中使用。
在构造函数中可以调用其他的构造函数，使用this函数。如Flower（int a,int b）{this(a)};但是不能调用多个。并且要放在最起始的位置。
可以在创建类的时候直接给成员变量赋值。更常见的是构造器的初始化。

总结一下对象的加载过程，假设有个名为Dog的类；
1、即使没有显示地使用static关键字，构造器实际上也是静态方法。因此当首次创建类型为Dog的对象时，或者Dog类的静态方法/静态域首次被
访问时，Java解释器必须查找类路径，以定位Dog.class文件。
2、然后载入Dog.class（这将创建一个Dog对象），有关静态初始化的所有动作都会执行。因此，静态初始化只在Class对象首次加载的时候进行一次。
3、当用New Dog（）创建对象的时候，首次将在堆上为Dog对象分配足够的内存空间。
4、这块存储空间会被清零，这就自动地将Dog（）对象中的所有基本数据类型都设置成了默认值，而引用责备设置成了null。
5、执行所有出现于字段定义处的初始化动作。
6、执行构造器。
P96
test(String... name);可变参数，参数可以是0,到多个Stirng类型，也可以是个字符串数组。如果有可以用于重载，并且如果有test(String... name),也有
test(),则test()调用优先调用的函数是test()

import static与import
import static（静态导入）是JDK1.5中的新特性，一般我们导入一个类都用 import com.....ClassName;
而静态导入是这样：import static com.....ClassName.*;这里多了个static，还有就是类名ClassName后
面多了个 .* ，意思是导入这个类里的静态方法。当然，也可以只导入某个静态方法，只要把 .* 换成静态
方法名就行了。然后在这个类中，就可以直接用方法名调用静态方法，而不必用ClassName.方法名的方式来调用。

Java访问权限修饰符
访问权限   类     包     子类     其他包
public      1      1       1        1
protected   1      1       1        0
default     1      1       0        0
private     1      0       0        0

